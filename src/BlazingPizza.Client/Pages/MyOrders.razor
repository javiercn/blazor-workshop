@page "/myorders"
@attribute [Authorize]
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Net.Http.Headers
@inject NavigationManager NavigationManager
@inject IAccessTokenProvider TokenProvider

<div class="main">
    <TemplatedList Loader="LoadOrders" ListGroupClass="orders-list">
        <Loading>Loading...</Loading>
        <Empty>
            <h2>No orders placed</h2>
            <a class="btn btn-success" href="">Order some pizza</a>
        </Empty>
        <Item Context="item">
            <div class="col">
                <h5>@item.Order.CreatedTime.ToLongDateString()</h5>
                Items:
                <strong>@item.Order.Pizzas.Count()</strong>;
                Total price:
                <strong>£@item.Order.GetFormattedTotalPrice()</strong>
            </div>
            <div class="col">
                Status: <strong>@item.StatusText</strong>
            </div>
            <div class="col flex-grow-0">
                <a href="myorders/@item.Order.OrderId" class="btn btn-success">
                    Track &gt;
                </a>
            </div>
        </Item>
    </TemplatedList>
</div>

@code {
    async Task<List<OrderWithStatus>> LoadOrders()
    {
        var tokenResponse = await TokenProvider.RequestAccessToken();
        if (tokenResponse.TryGetToken(out var token))
        {
            var client = CreateAuthenticatedClient(token);
            return await client.GetJsonAsync<List<OrderWithStatus>>("orders");
        }
        else
        {
            NavigationManager.NavigateTo(tokenResponse.RedirectUrl);
            return new List<OrderWithStatus>();
        }
    }

    private HttpClient CreateAuthenticatedClient(AccessToken token)
    {
        var client = new HttpClient();
        client.BaseAddress = new Uri(NavigationManager.BaseUri);
        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token.Value);
        return client;
    }
}
